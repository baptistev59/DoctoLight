@startuml DoctoLight
!theme plain

' ===========================
' Classes principales
' ===========================
' ===========================
' Utilisateurs
' ===========================
class User {
  -id : int
  -nom : string
  -prenom : string
  -email : string
  -date_naissance : datetime
  -passwordHash : string
  -is_active : boolean
  -created_at : datetime
  -role : Role[]

  +createUser()
  +updateUser()
  +deactivateUser()
  +authenticate(password) : boolean
}

class Role {
  -id : int
  -name : string

  +createRole()
  +updateRole()
  +deleteRole()
}

' ===========================
' Services
' ===========================
class Service {
  -id : int
  -nom : string
  -description : text
  -image : text
  -duree : int
  -is_active : boolean

  +createService()
  +updateService()
  +deleteService()
  +toggleDispo()
}
' ===========================
' Disponibilités
' ===========================
class DisponibiliteStaff {
  -id : int
  -staff_id : int
  -start_time : datetime
  -end_time : datetime
  -jour_semaine : string


  +createDisponibilite()
  +updateDisponibilite()
  +deleteDisponibilite()
}

class DisponibiliteService {
  -id : int
  -service_id : int
  -start_time : datetime
  -end_time : datetime
  -jour_semaine : string

  +createDisponibilite()
  +updateDisponibilite()
  +deleteDisponibilite()
}
' ===========================
' Rendez-vous
' ===========================
class RDV {
  -id : int
  -patient_id : int
  -staff_id : int
  -service_id : int
  -heure_debut : datetime
  -heure_fin : datetime
  -status : string
  -duree : int
  -dispoStaffId : int
  -dispoServicesId : int

  +createRDV()
  +updateRDV()
  +cancelRDV()
  +checkDisponibilites() : boolean
}

' ===========================
' Actualités
' ===========================
class News {
  -id : int
  -title : string
  -contenu : text
  -created_by : User
  -created_at : datetime
  -image : string

  +createNews()
  +updateNews()
  +deleteNews()
}

' ===========================
' Audit Log générique
' ===========================
class AuditLog {
  -id : int
  -tableName : string
  -entity_id : int
  -user_id : int
  -action : string <<CREATE, UPDATE, DELETE>>
  -description : text
  -ip_address : string
  -actionDate : datetime

  +logAction(tableName, entity_id, user_id, action, description, ip)
  +getLogsByEntity(tableName, entity_id)
}

' ===========================
' Relations
' ===========================
User "1" --> "0..n" RDV : crée/prend
User "1" --> "0..n" RDV : consulte/valide (staff)
User "1" --> "0..n" DisponibiliteStaff : définit/ajoute
User "1" --> "1..n" Role : s’attribue/revoque rôle
User "1" --> "0..n" News : publie/gère
User "1" --> "0..n" AuditLog : historise

Service "1" --> "0..n" RDV : concerne
Service "1" --> "1..n" DisponibiliteService :définit créneaux
Service "1" --> "0..n" AuditLog : historise

News "1" --> "0..n" AuditLog : historise

RDV "1" --> "0..n" AuditLog : historise

DisponibiliteStaff "1" --> "0..n" AuditLog : historise
DisponibiliteService "1" --> "0..n" AuditLog :historise

@enduml
